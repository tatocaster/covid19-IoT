apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "me.tatocaster.covid_19geocount"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", true)
            }
        }
    }

    signingConfigs rootProject.ext.signingConfigs

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
            pseudoLocalesEnabled true
        }

        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        sourceSets.debug.resources.srcDirs = ['src/debug/res']
    }

    lintOptions {
        disable('AllowBackup', 'GoogleAppIndexingWarning', 'MissingApplicationIcon')
    }
}



dependencies {
    implementation project(":core")
    implementation project(":covidstats")

    androidTestImplementation project(":core-android-testing")
    testImplementation project(":core-testing")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    rootProject.app.each { item ->
        add(item.configuration, item.dependency, item.options)
    }

    rootProject.kaptDependencies.each { item ->
        add(item.configuration, item.dependency, item.options)
    }

}
apply from: rootProject.file('team-props/static-analysis.gradle')